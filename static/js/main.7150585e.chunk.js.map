{"version":3,"sources":["config/reactotron.js","store/ducks/devs.js","store/ducks/map.js","store/ducks/newDevForm.js","store/ducks/index.js","services/api.js","store/sagas/devs.js","store/sagas/index.js","store/index.js","styles/colors.js","styles/global.js","components/Sidebar/styles.js","components/Sidebar/index.js","components/AddNewDev/styles.js","components/AddNewDev/index.js","components/Map/styles.js","components/Map/index.js","config/index.js","pages/Main/index.js","pages/NotFound/styles.js","pages/NotFound/index.js","routes.js","App.js","index.js"],"names":["reactotron","createActions","addDevRequest","addDevSuccess","addDevFailure","removeDev","prefix","Types","Creators","INITIAL_STATE","data","requesting","error","createReducer","_createReducer","Object","defineProperty","ADD_DEV_REQUEST","state","arguments","length","undefined","objectSpread","ADD_DEV_SUCCESS","action","concat","toConsumableArray","dev","ADD_DEV_FAILURE","REMOVE_DEV","toast","success","position","POSITION","TOP_RIGHT","filter","id","moveMapTo","moveMapToCordinates","longitude","latitude","MOVE_MAP_TO","cordinates","timestamp","Date","now","showNewDevForm","hideNewDevForm","visible","newDevForm_createReducer","SHOW_NEW_DEV_FORM","HIDE_NEW_DEV_FORM","combineReducers","devs","map","newDevForm","gitHub","axios","create","baseURL","addDev","_ref","devData","newDev","regenerator_default","a","wrap","_context","prev","next","call","get","user","sent","select","find","put","DevsActions","warn","login","avatar_url","name","html_url","NewDevFormActions","t0","stop","_marked","this","rootSaga","all","takeLatest","DevsTypes","sagas_marked","middlewares","sagaMiddleware","createSagaMiddleware","sagaMonitor","push","composer","compose","applyMiddleware","apply","store","createStore","reducers","run","sagas","colors","background","overlay","white","textColor","borders","btnSuccess","btnSuccessHover","btnCancel","btnCancelHover","GlobalStyle","createGlobalStyle","_templateObject","Container","styled","div","styles_templateObject","Empty","span","_templateObject2","Dev","_templateObject3","Avatar","img","_templateObject4","Infos","_templateObject5","Name","_templateObject6","User","_templateObject7","Button","button","_templateObject8","Remove","_templateObject9","GoTo","_templateObject10","connect","dispatch","bindActionCreators","MapActions","react_default","createElement","key","src","alt","href","target","type","onClick","index_es","icon","faTimesCircle","faCompass","AddNewDev_styles_templateObject","_ref2","props","loading","AddNewDev","githubUser","cleanInput","setTimeout","_this","setState","onCancelClick","event","preventDefault","_this$props","onSubmit","_this$props2","prevProps","window","removeEventListener","resize","_this2","_this$props3","styles_Container","placeholder","value","onChange","disabled","faCircleNotch","spin","Component","Loader","Map_styles_templateObject","mapLoading","requestingUserLocation","styles_templateObject2","Map","viewport","transitionInterpolator","FlyToInterpolator","transitionDuration","width","innerWidth","height","innerHeight","zoom","onViewportChange","requestUserLocation","navigator","geolocation","getCurrentPosition","goToViewport","coords","enableHighAccuracy","timeout","newViewport","onMapClick","_event$lngLat","slicedToArray","lngLat","addEventListener","nextProps","prevCordinates","nextCordinates","_this$state","react","className","esm","assign","onLoad","mapStyle","mapboxApiAccessToken","process","minZoom","dragRotate","touchRotate","offsetLeft","offsetTop","styles_Avatar","Main","components_Sidebar","components_AddNewDev","components_Map","NotFound_styles_templateObject","NotFound","NotFound_styles_Container","Routes","react_router_dom","react_router","exact","path","component","dotenv","config","configure","autoClose","App","es","global","routes","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7150585e.chunk.js","sourcesContent":["import Reactotron from 'reactotron-react-js';\nimport { reactotronRedux } from 'reactotron-redux';\nimport sagaPlugin from 'reactotron-redux-saga';\nimport { IS_DEV } from '.';\n\nconst reactotron = IS_DEV\n  ? Reactotron\n    .configure({\n      name: 'Dev Location',\n      host: window.location.hostname,\n    })\n    .use(reactotronRedux())\n    .use(sagaPlugin())\n    .connect()\n  : null;\n\nif (IS_DEV) reactotron.clear();\n\nexport default reactotron;\n","import { createActions, createReducer } from 'reduxsauce';\nimport { toast } from 'react-toastify';\n\nexport const { Types, Creators } = createActions(\n  {\n    addDevRequest: ['user', 'cordinates'],\n    addDevSuccess: ['dev'],\n    addDevFailure: null,\n    removeDev: ['dev'],\n  },\n  { prefix: 'devs/' },\n);\n\nconst INITIAL_STATE = {\n  data: [],\n  requesting: false,\n  error: false,\n};\n\nexport const addDevRequest = (state = INITIAL_STATE) => ({\n  ...state,\n  requesting: true,\n});\n\nexport const addDevSuccess = (state = INITIAL_STATE, action) => ({\n  data: [...state.data, action.dev],\n  requesting: false,\n  error: false,\n});\n\nexport const addDevFailure = (state = INITIAL_STATE) => ({\n  ...state,\n  requesting: false,\n  error: true,\n});\n\nexport const removeDev = (state = INITIAL_STATE, action) => {\n  toast.success('Dev removed!', { position: toast.POSITION.TOP_RIGHT });\n  return {\n    ...state,\n    data: state.data.filter(dev => dev.id !== action.dev.id),\n  };\n};\n\nexport default createReducer(INITIAL_STATE, {\n  [Types.ADD_DEV_REQUEST]: addDevRequest,\n  [Types.ADD_DEV_SUCCESS]: addDevSuccess,\n  [Types.ADD_DEV_FAILURE]: addDevFailure,\n  [Types.REMOVE_DEV]: removeDev,\n});\n","import { createActions, createReducer } from 'reduxsauce';\n\nexport const { Types, Creators } = createActions(\n  {\n    moveMapTo: ['cordinates'],\n  },\n  { prefix: 'map/' },\n);\n\nconst INITIAL_STATE = {\n  moveMapToCordinates: {\n    longitude: 0,\n    latitude: 0,\n  },\n};\n\nexport const moveMapTo = (state, action) => ({\n  moveMapToCordinates: {\n    longitude: action.cordinates.longitude,\n    latitude: action.cordinates.latitude,\n    timestamp: Date.now(),\n  },\n});\n\nexport default createReducer(INITIAL_STATE, {\n  [Types.MOVE_MAP_TO]: moveMapTo,\n});\n","import { createActions, createReducer } from 'reduxsauce';\n\nexport const { Types, Creators } = createActions(\n  {\n    showNewDevForm: ['cordinates'],\n    hideNewDevForm: null,\n  },\n  { prefix: 'newDevForm/' },\n);\n\nconst INITIAL_STATE = {\n  visible: false,\n  cordinates: {},\n};\n\nexport const showNewDevForm = (state, action) => ({\n  visible: true,\n  cordinates: action.cordinates,\n});\n\nexport const hideNewDevForm = () => INITIAL_STATE;\n\nexport default createReducer(INITIAL_STATE, {\n  [Types.SHOW_NEW_DEV_FORM]: showNewDevForm,\n  [Types.HIDE_NEW_DEV_FORM]: hideNewDevForm,\n});\n","import { combineReducers } from 'redux';\n\nimport devs from './devs';\nimport map from './map';\nimport newDevForm from './newDevForm';\n\nexport default combineReducers({\n  devs,\n  map,\n  newDevForm,\n});\n","import axios from 'axios';\n\nexport const gitHub = axios.create({\n  baseURL: 'https://api.github.com',\n});\n","import { call, put, select } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport { gitHub } from '../../services/api';\nimport { Creators as DevsActions } from '../ducks/devs';\nimport { Creators as NewDevFormActions } from '../ducks/newDevForm';\n\nexport function* addDev(action) {\n  try {\n    const { data: devData } = yield call(gitHub.get, `/users/${action.user}`);\n\n    const isDuplicated = yield select(state => state.devs.data.find(dev => dev.id === devData.id));\n\n    if (isDuplicated) {\n      yield put(DevsActions.addDevFailure());\n      toast.warn('Duplicated dev!', { position: toast.POSITION.TOP_RIGHT });\n    } else {\n      const newDev = {\n        id: devData.id,\n        login: devData.login,\n        avatar_url: devData.avatar_url,\n        name: devData.name,\n        html_url: devData.html_url,\n        cordinates: action.cordinates,\n      };\n\n      yield put(DevsActions.addDevSuccess(newDev));\n      yield put(NewDevFormActions.hideNewDevForm());\n      toast.success('New dev added!', { position: toast.POSITION.TOP_RIGHT });\n    }\n  } catch (err) {\n    yield put(DevsActions.addDevFailure());\n    toast.error('Error adding new dev!', { position: toast.POSITION.TOP_RIGHT });\n  }\n}\n","import { all, takeLatest } from 'redux-saga/effects';\n\nimport { Types as DevsTypes } from '../ducks/devs';\nimport { addDev } from './devs';\n\nexport default function* rootSaga() {\n  yield all([takeLatest(DevsTypes.ADD_DEV_REQUEST, addDev)]);\n}\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { IS_DEV } from '../config';\nimport reactotron from '../config/reactotron';\nimport reducers from './ducks';\nimport sagas from './sagas';\n\nconst middlewares = [];\n\nconst sagaMonitor = IS_DEV ? reactotron.createSagaMonitor() : null;\n\nconst sagaMiddleware = createSagaMiddleware({ sagaMonitor });\n\nmiddlewares.push(sagaMiddleware);\n\nconst composer = IS_DEV\n  ? compose(\n    applyMiddleware(...middlewares),\n    reactotron.createEnhancer(),\n  )\n  : compose(applyMiddleware(...middlewares));\n\nconst store = createStore(reducers, composer);\n\nsagaMiddleware.run(sagas);\n\nexport default store;\n","const colors = {\n  // General\n  background: '#9B65E6',\n  overlay: '#9B65E6CC',\n  white: '#FFF',\n  textColor: '#373737',\n  borders: 'rgba(0, 0, 0, 0.1)',\n  error: '#F00',\n\n  // Buttons\n  btnSuccess: '#9ACD32',\n  btnSuccessHover: '#94C530',\n  btnCancel: '#DCDCDC',\n  btnCancelHover: '#D3D3D3',\n};\n\nexport default colors;\n","import { createGlobalStyle } from 'styled-components';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { colors } from '.';\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    outline: 0;\n  }\n  body {\n    background: ${colors.background};\n    text-rendering: optimizeLegibility !important;\n    -webkit-font-smoothing: antialiased !important;\n    font-family: sans-serif;\n  }\n`;\n\nexport default GlobalStyle;\n","import styled from 'styled-components';\nimport { colors } from '../../styles';\n\nexport const Container = styled.div`\n  background: ${colors.white};\n  position: fixed;\n  z-index: 9997;\n  overflow: scroll;\n  width: 350px;\n  left: 20px;\n  top: 20px;\n  bottom: 20px;\n  padding: 20px;\n\n  @media (max-width: 600px) {\n    top: 10px\n    left: 10px;\n    right: 10px;\n    bottom: unset;\n    width: auto;\n    max-height: 32%;\n  }\n`;\n\nexport const Empty = styled.span`\n  font-size: 16px;\n  font-weight: bold;\n  color: rgba(0, 0, 0, 0.2);\n\n  @media (max-width: 600px) {\n    font-size: 18px;\n  }\n`;\n\nexport const Dev = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding-bottom: 10px;\n  margin-bottom: 10px;\n\n  &:not(:last-of-type) {\n    border-bottom: 1px solid ${colors.borders};\n  }\n`;\n\nexport const Avatar = styled.img`\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n`;\n\nexport const Infos = styled.a`\n  text-decoration: none;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  padding: 0 10px;\n`;\n\nexport const Name = styled.span`\n  font-size: 16px;\n  font-weight: bold;\n  color: ${colors.textColor};\n`;\n\nexport const User = styled.span`\n  font-size: 14px;\n  color: ${colors.textColor};\n`;\n\nconst Button = styled.button`\n  background: transparent;\n  border: 0;\n  margin: 0 5px;\n\n  svg {\n    font-size: 18px;\n    cursor: pointer;\n  }\n`;\n\nexport const Remove = styled(Button)`\n  svg {\n    color: ${colors.error};\n  }\n`;\n\nexport const GoTo = styled(Button)`\n  svg {\n    color: ${colors.background};\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimesCircle, faCompass } from '@fortawesome/free-solid-svg-icons';\nimport { Creators as DevsActions } from '../../store/ducks/devs';\nimport { Creators as MapActions } from '../../store/ducks/map';\nimport {\n  Container, Empty, Dev, Avatar, Infos, Name, User, Remove, GoTo,\n} from './styles';\n\nconst Sidebar = ({ devs, removeDev, moveMapTo }) => (\n  <Container>\n    {!devs.length && (\n      <Empty>There are no registered developers yet! Click in the map to add new devs.</Empty>\n    )}\n    {devs.map(dev => (\n      <Dev key={dev.id}>\n        <Avatar src={dev.avatar_url} alt={dev.name} />\n        <Infos href={dev.html_url} target=\"_blank\">\n          <Name>{dev.name}</Name>\n          <User>{dev.login}</User>\n        </Infos>\n        <Remove type=\"button\" onClick={() => removeDev(dev)}>\n          <FontAwesomeIcon icon={faTimesCircle} />\n        </Remove>\n        <GoTo type=\"button\" onClick={() => moveMapTo(dev.cordinates)}>\n          <FontAwesomeIcon icon={faCompass} />\n        </GoTo>\n      </Dev>\n    ))}\n  </Container>\n);\n\nSidebar.propTypes = {\n  devs: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      login: PropTypes.string.isRequired,\n      avatar_url: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      html_url: PropTypes.string.isRequired,\n      cordinates: PropTypes.shape({\n        longitude: PropTypes.number.isRequired,\n        latitude: PropTypes.number.isRequired,\n      }).isRequired,\n    }),\n  ).isRequired,\n  removeDev: PropTypes.func.isRequired,\n  moveMapTo: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  devs: state.devs.data,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators(\n  {\n    ...DevsActions,\n    ...MapActions,\n  },\n  dispatch,\n);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Sidebar);\n","import styled from 'styled-components';\nimport { colors } from '../../styles';\n\nexport const Container = styled.div`\n  background: ${colors.overlay};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  z-index: 9998;\n  top: 0;\n  left: 0;\n  height: 100%;\n  min-height: 100%;\n  width: 100%;\n  min-width: 100%;\n  pointer-events: ${({ visible }) => (visible ? 'all' : 'none')};\n  opacity: ${({ visible }) => (visible ? 1 : 0)};\n  transition: opacity 0.8s;\n\n  form {\n    background: ${colors.white};\n    width: 300px;\n    padding: 20px;\n    border-radius: 4px;\n    text-align: center;\n\n    span {\n      color: ${colors.textColor};\n      font-weight: bold;\n      font-size: 18px;\n    }\n\n    input {\n      height: 35px;\n      width: 100%;\n      margin: 12px 0 8px 0;\n      padding: 0 20px;\n      font-size: 16px;\n      color: ${colors.textColor};\n      border-radius: 4px;\n      transition: border 0.5s;\n      border: ${props => (props.error ? `2px solid ${colors.error}` : `1px solid ${colors.borders}`)};\n    }\n\n    button {\n      height: 35px;\n      width: calc(50% - 5px);\n      font-size: 15px;\n      border-radius: 4px;\n      outline: none;\n      border: 0;\n      color: ${colors.white};\n      font-weight: bold;\n      transition: background 0.2s;\n\n      &[type='button'] {\n        background: ${colors.btnCancel};\n        margin-right: 5px;\n        opacity: ${props => (props.loading ? 0.5 : 1)};\n        cursor: ${props => (props.loading ? 'not-allowed' : 'pointer')};\n\n        &:hover {\n          background: ${colors.btnCancelHover};\n        }\n      }\n\n      &[type='submit'] {\n        background: ${colors.btnSuccess};\n        margin-left: 5px;\n        cursor: pointer;\n\n        &:hover {\n          background: ${colors.btnSuccessHover};\n        }\n      }\n    }\n  }\n`;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleNotch } from '@fortawesome/free-solid-svg-icons';\nimport { Creators as DevsActions } from '../../store/ducks/devs';\nimport { Creators as NewDevFormActions } from '../../store/ducks/newDevForm';\nimport { Container } from './styles';\n\nclass AddNewDev extends Component {\n  static propTypes = {\n    visible: PropTypes.bool.isRequired,\n    cordinates: PropTypes.shape({\n      longitude: PropTypes.number,\n      latitude: PropTypes.number,\n    }).isRequired,\n    requesting: PropTypes.bool.isRequired,\n    error: PropTypes.bool.isRequired,\n    hideNewDevForm: PropTypes.func.isRequired,\n    addDevRequest: PropTypes.func.isRequired,\n  };\n\n  state = {\n    githubUser: '',\n  };\n\n  componentDidUpdate(prevProps) {\n    const { visible } = this.props;\n    if (prevProps.visible && !visible) this.cleanInput();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.resize);\n  }\n\n  cleanInput = () => {\n    setTimeout(() => {\n      this.setState({ githubUser: '' });\n    }, 800);\n  };\n\n  onCancelClick = (event) => {\n    event.preventDefault();\n    const { requesting, hideNewDevForm } = this.props;\n\n    if (requesting) return;\n\n    hideNewDevForm();\n  };\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    const { cordinates, requesting, addDevRequest } = this.props;\n    const { githubUser } = this.state;\n\n    if (requesting) return;\n\n    addDevRequest(githubUser, cordinates);\n  };\n\n  render() {\n    const { visible, requesting, error } = this.props;\n    const { githubUser } = this.state;\n\n    return (\n      <Container visible={visible} loading={requesting} error={error}>\n        <form onSubmit={this.onSubmit}>\n          <span>Add New Dev</span>\n\n          <input\n            type=\"text\"\n            placeholder=\"GitHub user\"\n            value={githubUser}\n            onChange={event => this.setState({ githubUser: event.target.value })}\n          />\n\n          <button type=\"button\" onClick={this.onCancelClick} disabled={requesting}>\n            Cancel\n          </button>\n\n          <button type=\"submit\">\n            {requesting ? <FontAwesomeIcon icon={faCircleNotch} spin /> : 'Save'}\n          </button>\n        </form>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  visible: state.newDevForm.visible,\n  cordinates: state.newDevForm.cordinates,\n  requesting: state.devs.requesting,\n  error: state.devs.error,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators(\n  {\n    ...DevsActions,\n    ...NewDevFormActions,\n  },\n  dispatch,\n);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(AddNewDev);\n","import styled from 'styled-components';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { colors } from '../../styles';\n\nexport const Loader = styled.div`\n  background: ${colors.background};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  z-index: 9996;\n  top: 0;\n  left: 0;\n  height: 100%;\n  min-height: 100%;\n  width: 100%;\n  min-width: 100%;\n  pointer-events: ${({ mapLoading, requestingUserLocation }) => (mapLoading || requestingUserLocation ? 'all' : 'none')};\n  opacity: ${({ mapLoading, requestingUserLocation }) => {\n    if (mapLoading) return 1;\n    if (requestingUserLocation) return 0.8;\n    return 0;\n  }};\n  transition: opacity 1s;\n\n  .pulse {\n    display: inline-block;\n    position: relative;\n    width: 128px;\n    height: 128px;\n  }\n\n  .pulse span {\n    position: absolute;\n    border: 4px solid ${colors.white};\n    opacity: 1;\n    border-radius: 50%;\n    animation: lds-ripple 1s cubic-bezier(0, 0.2, 0.8, 1) infinite;\n  }\n\n  .pulse span:nth-child(2) {\n    animation-delay: -0.5s;\n  }\n\n  @keyframes lds-ripple {\n    0% {\n      top: 56px;\n      left: 56px;\n      width: 0;\n      height: 0;\n      opacity: 1;\n    }\n    100% {\n      top: -1px;\n      left: -1px;\n      width: 116px;\n      height: 116px;\n      opacity: 0;\n    }\n  }\n`;\n\nexport const Avatar = styled.img`\n  border-radius: 50%;\n  width: 35px;\n  height: 35px;\n  border: 3px solid ${colors.background};\n\n  @media (max-width: 600px) {\n    width: 40px;\n    height: 40px;\n  }\n`;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport MapGL, { Marker, FlyToInterpolator } from 'react-map-gl';\nimport { MAPBOX_API_ACCESS_TOKEN } from '../../config';\nimport { Creators as NewDevFormActions } from '../../store/ducks/newDevForm';\nimport { Loader, Avatar } from './styles';\n\nclass Map extends Component {\n  static propTypes = {\n    moveMapToCordinates: PropTypes.shape({\n      longitude: PropTypes.number.isRequired,\n      latitude: PropTypes.number.isRequired,\n      timestamp: PropTypes.number,\n    }).isRequired,\n    devs: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        login: PropTypes.string.isRequired,\n        avatar_url: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        html_url: PropTypes.string.isRequired,\n        cordinates: PropTypes.shape({\n          longitude: PropTypes.number.isRequired,\n          latitude: PropTypes.number.isRequired,\n        }).isRequired,\n      }),\n    ).isRequired,\n    showNewDevForm: PropTypes.func.isRequired,\n  };\n\n  state = {\n    mapLoading: true,\n    requestingUserLocation: true,\n    viewport: {\n      transitionInterpolator: new FlyToInterpolator(),\n      transitionDuration: 0,\n      width: window.innerWidth,\n      height: window.innerHeight,\n      longitude: 0,\n      latitude: 0,\n      zoom: 1.5,\n    },\n  };\n\n  componentDidMount() {\n    window.addEventListener('resize', this.resize);\n    this.requestUserLocation();\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const { moveMapToCordinates: prevCordinates } = this.props;\n    const { moveMapToCordinates: nextCordinates } = nextProps;\n\n    if (prevCordinates.timestamp !== nextCordinates.timestamp) {\n      this.goToViewport(nextCordinates);\n    }\n\n    return true;\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.resize);\n  }\n\n  resize = () => this.onViewportChange({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n\n  requestUserLocation = () => {\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        this.goToViewport({\n          longitude: position.coords.longitude,\n          latitude: position.coords.latitude,\n        });\n\n        this.setState({ requestingUserLocation: false });\n      },\n      () => {\n        this.setState({ requestingUserLocation: false });\n      },\n      {\n        enableHighAccuracy: true,\n        timeout: 10000,\n      },\n    );\n  };\n\n  goToViewport = ({ longitude, latitude }) => {\n    this.onViewportChange({\n      transitionDuration: 3000,\n      longitude,\n      latitude,\n      zoom: 11,\n    });\n  };\n\n  onViewportChange = (newViewport) => {\n    const { viewport } = this.state;\n    this.setState({ viewport: { ...viewport, ...newViewport } });\n  };\n\n  onMapClick = (event) => {\n    const [longitude, latitude] = event.lngLat;\n    const { showNewDevForm } = this.props;\n    showNewDevForm({ longitude, latitude });\n  };\n\n  render() {\n    const { devs } = this.props;\n    const { mapLoading, requestingUserLocation, viewport } = this.state;\n\n    return (\n      <Fragment>\n        <Loader mapLoading={mapLoading} requestingUserLocation={requestingUserLocation}>\n          <div className=\"pulse\">\n            <span />\n            <span />\n          </div>\n        </Loader>\n\n        <MapGL\n          {...viewport}\n          onClick={this.onMapClick}\n          onLoad={() => this.setState({ mapLoading: false })}\n          onViewportChange={this.onViewportChange}\n          mapStyle=\"mapbox://styles/mapbox/streets-v11\"\n          mapboxApiAccessToken={MAPBOX_API_ACCESS_TOKEN}\n          minZoom={1.5}\n          dragRotate={false}\n          touchRotate={false}\n        >\n          {devs.map(dev => (\n            <Marker\n              longitude={dev.cordinates.longitude}\n              latitude={dev.cordinates.latitude}\n              key={dev.id}\n              offsetLeft={-15}\n              offsetTop={-20}\n            >\n              <Avatar alt={dev.name} src={dev.avatar_url} />\n            </Marker>\n          ))}\n        </MapGL>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  moveMapToCordinates: state.map.moveMapToCordinates,\n  devs: state.devs.data,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators(NewDevFormActions, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Map);\n","export const IS_DEV = process.env.NODE_ENV === 'development';\n\nexport const {\n  REACT_APP_MAPBOX_API_ACCESS_TOKEN: MAPBOX_API_ACCESS_TOKEN,\n} = process.env;\n","import React, { Fragment } from 'react';\nimport { Sidebar, AddNewDev, Map } from '../../components';\n\nconst Main = () => (\n  <Fragment>\n    <Sidebar />\n    <AddNewDev />\n    <Map />\n  </Fragment>\n);\n\nexport default Main;\n","import styled from 'styled-components';\nimport { colors } from '../../styles';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  color: ${colors.white};\n  height: 80vh;\n  line-height: 1.6;\n\n  h1 {\n    font-size: 40px;\n    opacity: 0.8;\n  }\n\n  h2 {\n    opacity: 0.7;\n  }\n\n  a {\n    color: ${colors.white};\n    opacity: 0.6;\n  }\n`;\n","import React from 'react';\nimport { Container } from './styles';\n\nconst NotFound = () => (\n  <Container>\n    <h1>Dev Location</h1>\n    <h2>This page doesn&apos;t exist!</h2>\n    <a href=\"/dev-location/\">Click here to go home.</a>\n  </Container>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { Main, NotFound } from './pages';\n\nconst Routes = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/dev-location/\" component={Main} />\n      <Route path=\"*\" component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Routes;\n","import React, { Fragment } from 'react';\nimport { Provider } from 'react-redux';\nimport dotenv from 'dotenv';\nimport { toast } from 'react-toastify';\nimport store from './store';\nimport Routes from './routes';\nimport { GlobalStyle } from './styles';\n\ndotenv.config();\ntoast.configure({ autoClose: 3000 });\n\nconst App = () => (\n  <Provider store={store}>\n    <Fragment>\n      <GlobalStyle />\n      <Routes />\n    </Fragment>\n  </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}